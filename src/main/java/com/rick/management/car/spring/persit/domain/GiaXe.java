package com.rick.management.car.spring.persit.domain;

// Generated Mar 16, 2014 1:24:02 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * GiaXe generated by hbm2java
 */
@Entity
@Table(name = "gia_xe", catalog = "managementrendercar")
public class GiaXe implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer giaXeId;
	private Date ngayCapNhat;
	private float giaXe;
	private Integer lanCapNhat;
	private Set<DmXe> dmXes = new HashSet<DmXe>(0);

	public GiaXe() {
	}

	public GiaXe(float giaXe) {
		this.giaXe = giaXe;
	}

	public GiaXe(Date ngayCapNhat, float giaXe, Integer lanCapNhat,
			Set<DmXe> dmXes) {
		this.ngayCapNhat = ngayCapNhat;
		this.giaXe = giaXe;
		this.lanCapNhat = lanCapNhat;
		this.dmXes = dmXes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "gia_xe_id", unique = true, nullable = false)
	public Integer getGiaXeId() {
		return this.giaXeId;
	}

	public void setGiaXeId(Integer giaXeId) {
		this.giaXeId = giaXeId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ngay_cap_nhat", length = 19)
	public Date getNgayCapNhat() {
		return this.ngayCapNhat;
	}

	public void setNgayCapNhat(Date ngayCapNhat) {
		this.ngayCapNhat = ngayCapNhat;
	}

	@Column(name = "gia_xe", nullable = false, precision = 12, scale = 0)
	public float getGiaXe() {
		return this.giaXe;
	}

	public void setGiaXe(float giaXe) {
		this.giaXe = giaXe;
	}

	@Column(name = "lan_cap_nhat")
	public Integer getLanCapNhat() {
		return this.lanCapNhat;
	}

	public void setLanCapNhat(Integer lanCapNhat) {
		this.lanCapNhat = lanCapNhat;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "giaXe")
	public Set<DmXe> getDmXes() {
		return this.dmXes;
	}

	public void setDmXes(Set<DmXe> dmXes) {
		this.dmXes = dmXes;
	}

}
